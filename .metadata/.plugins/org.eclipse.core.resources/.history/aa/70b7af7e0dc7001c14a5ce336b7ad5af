package Group1.MyShell.MVC.model;

import java.sql.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table(name = "Cryptocurrency")
public class CryptocurrencyBean {
	@Id
	@Column(name = "Date")
	private Date date;

	@Column(name = "Name_of_Cryptocurrency")
	private String nameOfCryptocurrency;

	@Column(name = "Symbol_of_Cryptocurrency")
	private String symbolOfCryptocurrency;

	@Column(name = "Slug_of_Cryptocurrency")
	private String slugOfCryptocurrency;

	@Column(name = "Max_Supply")
	private Integer maxSupply;

	@Column(name = "Circulating_Supply")
	private Integer circulatingSupply;

	@Column(name = "Percent_Change_1h")
	private double percentChange1h;

	@Column(name = "Percent_Change_24h")
	private double percentChange24h;

	@Column(name = "Percent_Change_7d")
	private double percentChange7d;

	@Column(name = "Percent_Change_30d")
	private double percentChange30d;

	@Column(name = "Percent_Change_60d")
	private double percentChange60d;

	@Column(name = "Percent_Change_90d")
	private double percentChange90d;

	@Column(name = "CNY_Price_of_Cryptocurrency")
	private double CNYpriceOfCryptocurrency;

	@Column(name = "CNY_Market_Cap")
	private double CNYmarketCap;

	@Column(name = "CNY_Fully_Diluted_Market_Cap")
	private double CNYfullyDilutedMarketCap;

	@Column(name = "EUR_Price_of_Cryptocurrency")
	private double EURpriceOfCryptocurrency;

	@Column(name = "EUR_Market_Cap")
	private double EURmarketCap;

	@Column(name = "EUR_Fully_Diluted_Market_Cap")
	private double EURfullyDilutedMarketCap;

	@Column(name = "TWD_Price_of_Cryptocurrency")
	private double TWDpriceOfCryptocurrency;

	@Column(name = "TWD_Market_Cap")
	private double TWDmarketCap;

	@Column(name = "TWD_Fully_Diluted_Market_Cap")
	private double TWDfullyDilutedMarketCap;

	@Column(name = "USD_Price_of_Cryptocurrency")
	private double USDpriceOfCryptocurrency;

	@Column(name = "USD_Market_Cap")
	private double USDNYmarketCap;

	@Column(name = "USD_Fully_Diluted_Market_Cap")
	private double USDfullyDilutedMarketCap;

	@Column(name = "JPY_Price_of_Cryptocurrency")
	private double JPYpriceOfCryptocurrency;

	@Column(name = "JPY_Market_Cap")
	private double JPYmarketCap;

	@Column(name = "JPY_Fully_Diluted_Market_Cap")
	private double JPYfullyDilutedMarketCap;

	public CryptocurrencyBean(Date date, String nameOfCryptocurrency, String symbolOfCryptocurrency,
			String slugOfCryptocurrency, Integer maxSupply, Integer circulatingSupply, double percentChange1h,
			double percentChange24h, double percentChange7d, double percentChange30d, double percentChange60d,
			double percentChange90d, double cNYpriceOfCryptocurrency, double cNYmarketCap,
			double cNYfullyDilutedMarketCap, double eURpriceOfCryptocurrency, double eURmarketCap,
			double eURfullyDilutedMarketCap, double tWDpriceOfCryptocurrency, double tWDmarketCap,
			double tWDfullyDilutedMarketCap, double uSDpriceOfCryptocurrency, double uSDNYmarketCap,
			double uSDfullyDilutedMarketCap, double jPYpriceOfCryptocurrency, double jPYmarketCap,
			double jPYfullyDilutedMarketCap) {
		super();
		this.date = date;
		this.nameOfCryptocurrency = nameOfCryptocurrency;
		this.symbolOfCryptocurrency = symbolOfCryptocurrency;
		this.slugOfCryptocurrency = slugOfCryptocurrency;
		this.maxSupply = maxSupply;
		this.circulatingSupply = circulatingSupply;
		this.percentChange1h = percentChange1h;
		this.percentChange24h = percentChange24h;
		this.percentChange7d = percentChange7d;
		this.percentChange30d = percentChange30d;
		this.percentChange60d = percentChange60d;
		this.percentChange90d = percentChange90d;
		CNYpriceOfCryptocurrency = cNYpriceOfCryptocurrency;
		CNYmarketCap = cNYmarketCap;
		CNYfullyDilutedMarketCap = cNYfullyDilutedMarketCap;
		EURpriceOfCryptocurrency = eURpriceOfCryptocurrency;
		EURmarketCap = eURmarketCap;
		EURfullyDilutedMarketCap = eURfullyDilutedMarketCap;
		TWDpriceOfCryptocurrency = tWDpriceOfCryptocurrency;
		TWDmarketCap = tWDmarketCap;
		TWDfullyDilutedMarketCap = tWDfullyDilutedMarketCap;
		USDpriceOfCryptocurrency = uSDpriceOfCryptocurrency;
		USDNYmarketCap = uSDNYmarketCap;
		USDfullyDilutedMarketCap = uSDfullyDilutedMarketCap;
		JPYpriceOfCryptocurrency = jPYpriceOfCryptocurrency;
		JPYmarketCap = jPYmarketCap;
		JPYfullyDilutedMarketCap = jPYfullyDilutedMarketCap;
	}

}
